// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UpDiddyApi.Models;

namespace UpDiddyApi.Migrations
{
    [DbContext(typeof(UpDiddyDbContext))]
    [Migration("20180911224232_added TagTopic")]
    partial class addedTagTopic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UpDiddyApi.Models.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BadgeGuid");

                    b.Property<string>("BadgeName")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("Hidden");

                    b.Property<string>("Icon");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<int>("Points");

                    b.Property<string>("Slug");

                    b.Property<string>("SortOrder");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("BadgeId");

                    b.ToTable("Badge");
                });

            modelBuilder.Entity("UpDiddyApi.Models.BadgeCourse", b =>
                {
                    b.Property<int>("BadgeCourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BadgeCourseGuid");

                    b.Property<string>("BadgeID")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<string>("Notes");

                    b.Property<int>("SortOrder");

                    b.HasKey("BadgeCourseId");

                    b.ToTable("BadgeCourse");
                });

            modelBuilder.Entity("UpDiddyApi.Models.BadgeEarned", b =>
                {
                    b.Property<int>("BadgeEarnedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BadgeEarnedGuid");

                    b.Property<string>("BadgeID")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<DateTime>("DateEarned");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<int>("PointValue");

                    b.Property<string>("SubscriberID");

                    b.HasKey("BadgeEarnedId");

                    b.ToTable("BadgeEarned");
                });

            modelBuilder.Entity("UpDiddyApi.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseCode");

                    b.Property<int>("CourseDeliveryId");

                    b.Property<string>("CourseDescription");

                    b.Property<Guid>("CourseGuid");

                    b.Property<string>("CourseName");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<string>("DesktopImage");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("MobileImage");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<decimal>("Price");

                    b.Property<int>("SortOrder");

                    b.Property<string>("TabletImage");

                    b.Property<int>("TopicId");

                    b.Property<int>("VendorId");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("UpDiddyApi.Models.CourseDelivery", b =>
                {
                    b.Property<int>("CourseDeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CourseDeliveryGuid");

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<string>("DeliveryDescription");

                    b.Property<string>("DeliveryMethod");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.HasKey("CourseDeliveryId");

                    b.ToTable("CourseDelivery");
                });

            modelBuilder.Entity("UpDiddyApi.Models.EducationLevel", b =>
                {
                    b.Property<int>("EducationLevelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<Guid>("EducationLevelGuid");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Level")
                        .IsRequired();

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.HasKey("EducationLevelId");

                    b.ToTable("EducationLevel");
                });

            modelBuilder.Entity("UpDiddyApi.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("EnrollDate");

                    b.Property<decimal>("EnrollmentFee");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("SubscriberId");

                    b.HasKey("EnrollmentId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("UpDiddyApi.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<Guid>("GenderGuid");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<string>("SexualIdentification");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("UpDiddyApi.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<DateTime>("DateActive");

                    b.Property<string>("Headline");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<Guid>("NewsGuid");

                    b.Property<int>("SortOrder");

                    b.Property<string>("SubText");

                    b.HasKey("NewsId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("UpDiddyApi.Models.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int>("EducationLevelID");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("GenderID");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<string>("PhoneNumber");

                    b.Property<Guid>("SubscriberGuid");

                    b.HasKey("SubscriberId");

                    b.ToTable("Subscriber");
                });

            modelBuilder.Entity("UpDiddyApi.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<Guid>("TagGuid");

                    b.Property<string>("TagName");

                    b.HasKey("TagId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("UpDiddyApi.Models.TagCourse", b =>
                {
                    b.Property<int>("TagCourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<Guid>("TagCourseGuid");

                    b.Property<int>("TagId");

                    b.HasKey("TagCourseId");

                    b.ToTable("TagCourse");
                });

            modelBuilder.Entity("UpDiddyApi.Models.TagTopic", b =>
                {
                    b.Property<int>("TagTopicId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<int>("TagId");

                    b.Property<Guid>("TagTopicGuid");

                    b.Property<int>("TopicId");

                    b.HasKey("TagTopicId");

                    b.ToTable("TagTopic");
                });

            modelBuilder.Entity("UpDiddyApi.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("TopicId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("UpDiddyApi.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<Guid>("VendorGuid");

                    b.Property<string>("VendorName")
                        .IsRequired();

                    b.HasKey("VendorId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("UpDiddyApi.Models.VendorTermsOfService", b =>
                {
                    b.Property<int>("VendorTermsOfServiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateGuid");

                    b.Property<DateTime>("DateEffective");

                    b.Property<string>("Description");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyGuid");

                    b.Property<int>("VendorID");

                    b.Property<Guid>("VendorTermsOfServiceGuid");

                    b.HasKey("VendorTermsOfServiceId");

                    b.ToTable("VendorTermsOfService");
                });
#pragma warning restore 612, 618
        }
    }
}
