@using React.AspNet;
@using UpDiddy.ViewModels
@using UpDiddyLib.Dto
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model BrowseJobsLocationViewModel

<div class="job-search-container">
    <div class="job-search-results">
        <div class="container">
            @if (Model.Items == null)
            {
                await Html.RenderPartialAsync("Partials/_JobResultsPartial", Model);

                if (Model.NumberOfPages > 1)
                {
                    <nav aria-label="Page navigation example">
                        <ul class="pagination justify-content-center">
                            @if (Model.CurrentPage != 1)
                            {
                                <li class="page-item">
                                    @{
                                        string url = Model.BaseUrl + "/" + (Model.CurrentPage - 1);
                                    }
                                    <a class="page-link" href="@url" tabindex="-1">Previous</a>
                                </li>
                            }
                            @for (int i = 1; i < Model.NumberOfPages + 1; i++)
                            {
                                string url = Model.BaseUrl + "/" + i;
                                string active = i == Model.CurrentPage ? "active" : string.Empty;
                                <li class="page-item @active"><a class="page-link" href="@url">@i</a></li>
                            }
                            @if (Model.CurrentPage != Model.NumberOfPages)
                            {
                                <li class="page-item">
                                    @{
                                        string url = Model.BaseUrl + "/" + (Model.CurrentPage + 1);
                                    }
                                    <a class="page-link" href="@url" tabindex="-1">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }

            }
            else
            {
                @Html.React("BrowseJobs", new { list = Model.Items });
            }
        </div>
    </div>
    

</div>
