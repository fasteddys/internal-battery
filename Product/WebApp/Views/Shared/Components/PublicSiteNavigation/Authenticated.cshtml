@using UpDiddy.ViewModels.Components.Layout
@model MenuItemViewModel
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


<nav class="navbar cc-navbar fixed-top navbar-expand-lg navbar-light bg-white">
    <div class="container">
        <a class="navbar-brand" href="~/Home/Index">
            <img src="~/images/cc_logo.png" asp-append-version="true" />
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#NavigationItems" aria-controls="NavigationItems" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="NavigationItems">
            <ul class="navbar-nav ml-auto">
                @foreach (MenuItemViewModel item in Model.ChildPages)
                {
                    @if (item.ChildPages.Count == 0)
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="@item.Url">@item.Label</a>
                        </li>
                    }
                    else
                    {
                        int ItemHash = item.GetHashCode();
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" id="id_@ItemHash" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-user-circle" aria-hidden="true"></i> @item.Label</a>
                            <div class="dropdown-menu" aria-labelledby="id_@ItemHash">
                                @foreach (MenuItemViewModel Child in item.ChildPages)
                                {
                                    if (Child.NeedsAdminPermissions && (await AuthorizationService.AuthorizeAsync(User, "IsRecruiterPolicy")).Succeeded)
                                    {
                                        <a class="dropdown-item" href="@Child.Url">@Child.Label</a>
                                    }
                                    else if (Child.NeedsTalentPermissions && (await AuthorizationService.AuthorizeAsync(User, "IsRecruiterPolicy")).Succeeded)
                                    {
                                        <a class="dropdown-item" href="@Child.Url">@Child.Label</a>
                                    }
                                    else if (!Child.NeedsAdminPermissions && !Child.NeedsTalentPermissions)
                                    {
                                        <a class="dropdown-item" href="@Child.Url">@Child.Label</a>
                                    }

                                }
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" asp-area="" asp-controller="Session" asp-action="SignOut">Sign out</a>
                            </div>
                        </li>
                    }

                }

            </ul>
        </div>
    </div>
</nav>



