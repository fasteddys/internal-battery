@using UpDiddy.ViewModels.Components.Layout
@model PublicSiteNavigationMenuItemViewModel
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


<nav class="navbar cc-navbar fixed-top navbar-expand-lg navbar-light bg-white">
    <div class="container">
        <a class="navbar-brand" href="~/Home/Index">
            <img src="~/images/cc_logo.png" asp-append-version="true" />
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#NavigationItems" aria-controls="NavigationItems" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="NavigationItems">
            <ul class="navbar-nav ml-auto">
                @foreach (PublicSiteNavigationMenuItemViewModel item in Model.ChildPages)
                {
                    if (!item.NeedsAuthentication)
                    {
                        if (item.Role.RolePolicy != null && (await AuthorizationService.AuthorizeAsync(User, item.Role.RolePolicy)).Succeeded)
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="@item.Url">
                                    @if (!string.IsNullOrEmpty(item.BadgeText))
                                    {
                                        <span class="badge badge-success">@item.BadgeText</span>
                                    }
                                    @if (!string.IsNullOrEmpty(item.FontAwesomeIcon))
                                    {
                                        <i class="@item.FontAwesomeIcon" aria-hidden="true"></i>
                                    }
                                    @item.Label
                                </a>
                            </li>
                        }
                        else if (item.Role.RolePolicy == null)
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="@item.Url">
                                    @if (!string.IsNullOrEmpty(item.BadgeText))
                                    {
                                        <span class="badge badge-success">@item.BadgeText</span>
                                    }
                                    @if (!string.IsNullOrEmpty(item.FontAwesomeIcon))
                                    {
                                        <i class="@item.FontAwesomeIcon" aria-hidden="true"></i>
                                    }
                                    @item.Label
                                </a>
                            </li>
                        }
                    }

                }
                <li class="nav-item brand-button-light"><a class="nav-link" asp-area="" asp-controller="Session" asp-action="SignIn">Login/Sign Up</a></li>
            </ul>
        </div>
    </div>
</nav>



