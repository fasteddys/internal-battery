@using UpDiddy.ViewModels
@using System.Net
@model SignUpViewModel

@{
    string _form = Model.IsExpressSignUp ? "ExpressSignUpForm" : "SignUpForm";
    string _aspAction = Model.IsExpressSignUp ? "express-sign-up" : "sign-up";
}

<div id="SignUpComponent">
    <form id="@_form" asp-controller="Campaign" asp-action="@_aspAction" data-action="@_aspAction">
        @{
            if (!Model.IsExpressSignUp)
            {
                <input type="hidden" asp-for="PartnerContactGuid" name="PartnerContactGuid" value="@Model.PartnerContactGuid" form="SignUpForm" />
                <input type="hidden" asp-for="CampaignGuid" name="CampaignGuid" value="@Model.CampaignGuid" form="SignUpForm" />
                <input type="hidden" asp-for="CampaignPhase" name="CampaignPhase" value="@WebUtility.UrlEncode(Model.CampaignPhase)" form="SignUpForm" />
            }
            if (Model.PartnerGuid != Guid.Empty && Model.PartnerGuid != null)
            {
                <input type="hidden" asp-for="PartnerGuid" name="PartnerGuid" value="@Model.PartnerGuid" form="@_form" />
            }
        }
        <div class="row">
                @if (Model.IsWaitList)
                {
                    <div class="d-flex justify-content-center pb-4" style="width:100%">
                        <a asp-action="signin"
                        asp-controller="session"
                        style="width:100%"
                        class="btn btn-sm btn-light-blue mb-0 mr-2"
                        asp-route-redirectUri="campaign/@Model.CampaignSlug">@Model.ExistingUserButtonText</a>
                    </div>
                }
            @if (Model.IsWaitList)
            {
                <div id="SignUpFirstName" class="col-12 sign-up-input no-padding">
                    <input class="wide-input" placeholder="Your first name" form="@_form" name="FirstName" asp-for="FirstName" required />
                </div>
                <div id="SignUpLastName" class="col-12 sign-up-input no-padding">
                    <input class="wide-input" placeholder="Your last name" form="@_form" name="LastName" asp-for="LastName" required />
                </div>
                <div id="SignUpPhone" class="col-12 sign-up-input no-padding">
                    <input class="wide-input" placeholder="Your phone number (optional)" type="text" maxlength="16" form="@_form" name="PhoneNumber" asp-for="PhoneNumber" />
                </div>
            }
            <div id="SignUpEmail" class="col-12 sign-up-input no-padding">
                <input class="wide-input" placeholder="Your email" form="@_form" data-val="true" name="Email" asp-for="Email" required />
            </div>
            <div id="SignUpPassword" class="col-12 sign-up-input no-padding">
                <input class="wide-input" placeholder="Password" type="password" form="@_form" name="Password" asp-for="Password" required />
            </div>
            <div id="SignUpPasswordRetype" class="col-12 sign-up-input no-padding">
                <input class="wide-input" placeholder="Re-enter password" type="password" form="@_form" name="ReenterPassword" asp-for="ReenterPassword" required />
            </div>
            <div>
                <div class="form-check sign-up-input">
                    <input type="checkbox" class="form-check-input" id="termsAndConditionsCheck" value="agree" required>
                    <label class="form-check-label text-left" for="termsAndConditionsCheck">I agree to CareerCircle website <a target="_blank" href="/Home/TermsOfService">terms and conditions</a></label>
                </div>
            </div>
            <div id="SignUpAction" class="col-12 no-padding">
                @Html.Partial("Components/Buttons/_Action", new ActionButtonViewModel {
                    Text = @Model.IsWaitList ? @Model.FormSubmitButtonText : Model.SignUpButtonText == null ? "Sign Up Now" : Model.SignUpButtonText,
                    SkewDirection = "skew-left-to-right",
                    ChosenColorScheme = "cc-cscheme-darkred",
                    Form = _form,
                    ButtonAction = ActionButtonViewModel.Action.SUBMIT
                })
            </div>
            @if (!string.IsNullOrWhiteSpace(Model.ObfuscatedEmail))
            {
                <div class="col-12 no-padding notification">
                    You must use the following email: @Model.ObfuscatedEmail
                </div>
            } 
        </div>
        @Html.HiddenFor(x => Model.IsWaitList)
        @Html.HiddenFor(x => Model.IsLoggedIn)
        @Html.HiddenFor(x => Model.CampaignSlug)
    </form>
    <div class="modal signup-modal text-cc-secondary" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        @if(Model.IsWaitList)
                        {
                            @Html.Raw(Model.SuccessHeader);
                        }else
                        {
                            @Html.Raw("Thank You!");
                        }
                    </h5>
                </div>
                <div class="modal-body">
                    @if(Model.IsWaitList)
                    {
                        @Html.Raw(Model.SuccessText);
                    }
                    else
                    {
                        @Html.Raw("<p>You have signed up successfully. You will now be redirected to the login page.</p>");
                    }
                </div>
                <div class="modal-footer">
                    <a href="/Session/SignIn" class="btn btn-primary">Continue</a>
                </div>
            </div>
        </div>
    </div>
</div>

