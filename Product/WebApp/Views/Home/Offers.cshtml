@using UpDiddy.ViewModels
@using UpDiddyLib.Dto
@model OffersViewModel
@section Scripts
{
    <script type="text/javascript">
        var emailVerification = {
            init: function () {
                $('.email-verification-btn').click(function (e) {
                    var $this = $(this);
                    $this.prop('disabled', true);
                    var verifyLink = new URL("/email/confirm-verification/", window.location.origin);
                    var returnUrl = new URL("/Home/Offers", window.location.origin);
                    verifyLink.searchParams.append('returnUrl', returnUrl.href);

                    CareerCircleAPI.requestVerification(verifyLink.href).then(function (res) {
                        ToastService.success('Verification email sent.')
                    })
                    .catch(function (e) {
                        ToastService.error('An unexpected error occurred. Please try again later.');
                    })
                    .finally(function () {
                        $this.prop('disabled', false);
                    });
                });
            }
        }

        $(document).ready(function () {
            emailVerification.init();
        });
    </script>
}
<div class="offer-container">
    <div class="offers-page-header row">
        <div class="col-12">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="header-language-container">
                            <div class="promo-header-text">
                                <strong>Current CareerCircle Offers</strong>
                            </div>
                            @*
        @Html.Partial("Components/Buttons/_Action", new ActionButtonViewModel {
            Text = "Join Our Community",
            Hyperlink = "/join#CommunityCampaignBottomContainer",
            FitToText = true,
            ChosenColorScheme = "cc-cscheme-secondary",
            ButtonAction = ActionButtonViewModel.Action.CTA,
            ButtonClass = "signup-cta"
        })
                            *@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="OffersContainer" class="row">
        <div class="col-12">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        @if (!Model.UserIsEligibleForOffers)
                        {
                            <div class="alert alert-warning" role="alert">
                                @if (Model.StepsRequired.Any())
                                {
                                    <p>Please complete the following to gain access to offers:</p>
                                    <ul>
                                        @foreach (string requiredStep in Model.StepsRequired)
                                        {
                                            <li>@Html.Raw(requiredStep)</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    @Html.Raw(Model.CtaText);
                                }
                            </div>
                        }
                        @if (Model.Offers != null && Model.Offers.Count > 0)
                        {
                            @Html.Partial("Components/Bands/_OfferListingBand", new OfferListingViewModel
                            {
                                Offers = Model.Offers,
                                IsEligible = Model.UserIsEligibleForOffers
                            })
                        }
                        else
                        {
                            <h2>No offers are available at this time.</h2>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    
