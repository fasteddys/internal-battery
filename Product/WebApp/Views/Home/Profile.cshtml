@using Microsoft.AspNetCore.Mvc.Localization
@using UpDiddy.ViewModels
@using UpDiddyLib.Dto
@using System.Collections.Generic;
@using System;
@model ProfileViewModel

<script type="text/javascript">
    // this must be present for the API call used in site.js
    var url = '@Url.Action("GetStatesByCountry", "Home")';

    document.addEventListener('DOMContentLoaded', function () {
        var skills = new Choices('#choices-skills', {
            removeItems: true,
            removeItemButton: true,
            duplicateItemsAllowed: false
        });

        skills.ajax(function (callback) {
            fetch('http://localhost:5000/Home/GetSkills')
                .then(function (response) {
                    response.json().then(function (data) {
                        callback(data, 'value', 'label');
                    });
                })
                .catch(function (error) {
                    console.log(error);
                });
        })
    });
</script>

<div class="profile-container">
    <div class="row profile-hero">
        <div class="col-md-12">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <!--<div class="profile-headshot">
                            <img src="~/images/blank_avatar.jpg" />
                        </div>-->
                        <div class="row profile-header-info">
                            <!--<div class="offset-md-3 col-md-5">-->
                            <div class="col-md-8 no-padding">
                                <div class="career-circle-profile-text">My CareerCircle Profile</div>
                                <div id="ProfileName" class="career-circle-profile-name">
                                    <span id="ProfileFirstName">@(string.IsNullOrEmpty(Model.FirstName) ? "CareerCircle User" : Model.FirstName)</span>
                                    <span id="ProfileLastName">@(string.IsNullOrEmpty(Model.LastName) ? "" : Model.LastName)</span>
                                </div>
                                <div class="career-circle-profile-email">
                                    <i class="fa fa-envelope" aria-hidden="true"></i>
                                    @Model.Email
                                </div>
                            </div>
                            <!--
                            <div class="col-md-4 no-padding">
                                Circle Completion Rating
                            </div>
                            -->
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row profile-body-container">
        <div class="col-md-12">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="mb-2">
                            @await Component.InvokeAsync("LinkedInSync", new { SubscriberGuid = Model.SubscriberGuid })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="courses-in-progress-container">
                            <div class="course-in-progress-header">
                                <h2>Courses in Progress</h2>
                            </div>
                            <div class="courses-in-progress-list-container">
                                @{
                                    if (Model.Enrollments.Count == 0)
                                    {
                                        <text>You are not currently enrolled in any courses.</text>
                                    }
                                }
                                <ul class="courses-in-progress-list-desktop">
                                    @foreach (EnrollmentDto enrollment in Model.Enrollments)
                                    {
                                        <li class="course-in-progress-li">
                                            @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                            {
                                                @Html.Raw("<a target=\"_blank\" href=\"" + enrollment.CourseUrl + "\">")
                                            }

                                            <div class="course-in-progress-anchor-container">
                                                <div class="course-in-progress-info">
                                                    <div class="row no-padding">
                                                        <div class="col-12 col-sm-8 no-padding">
                                                            <h3>@enrollment.Course.Name</h3>
                                                        </div>
                                                        <div class="col-12 col-sm-4 no-padding cip-progress-indictation">
                                                            @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Pending)
                                                            {
                                                                <text>Enrollment in progress.</text>
                                                            }
                                                            else if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                                            {
                                                                <text>Continue <i class="fas fa-arrow-right"></i></text>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                @{
                                                    @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                                    {
                                                        double percentComplete = enrollment.PercentComplete;
                                                        string classFormatter = "";
                                                        if (percentComplete < 50)
                                                        {
                                                            classFormatter = "less-than-50";
                                                        }
                                                        else
                                                        {
                                                            classFormatter = "more-than-50";
                                                        }
                                                        <div class="course-in-progress">

                                                            <div class="progress @(classFormatter)">

                                                                <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="@(percentComplete)" aria-valuemin="0" aria-valuemax="100">
                                                                    <div class="course-completion-percentage">
                                                                        @(percentComplete)%
                                                                    </div>
                                                                </div>

                                                            </div>

                                                        </div>
                                                    }
                                                    else if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Error)
                                                    {
                                                        <div class="course-enrollment-failure-container">
                                                            Unfortunately, an error occurred when attempting to process your enrollment. We have been notified and are working to resolve the issue.
                                                        </div>
                                                    }

                                                }
                                            </div>

                                            @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                            {
                                                @Html.Raw("</a>")
                                            }




                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="dashed-line-boxes-container">
                            <div class="edit-personal-info-container">
                                <div class="personal-info-header">
                                    <div class="row">
                                        <div class="col-12 col-sm-8 no-padding">
                                            <h2>Contact Information</h2>
                                        </div>
                                        <div class="col-4 d-none d-sm-block container-align-right no-padding">
                                            <button class="btn btn-primary edit-profile-info-button" type="button">
                                                Edit
                                            </button>
                                        </div>
                                    </div>

                                </div>
                                <div class="personal-info-display">
                                    @{
                                        if (!Model.IsAnyProfileInformationPopulated)
                                        {
                                            <text>No information found. Please press 'Edit' to edit your information.</text>
                                        }
                                    }
                                    <ul>
                                        @{
                                            if (!string.IsNullOrEmpty(Model.FirstName))
                                            {
                                                <li>
                                                    First name: <span id="ProfileFirstNameDisplay">@Model.FirstName</span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.LastName))
                                            {
                                                <li>
                                                    Last name: <span id="ProfileLastNameDisplay">@Model.LastName</span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.Address))
                                            {
                                                <li>
                                                    Address: <span id="ProfileAddressDisplay">@Model.Address</span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.City))
                                            {
                                                <li>
                                                    City: <span id="ProfileCityDisplay">@Model.City</span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (Model.SelectedState.HasValue)
                                            {
                                                <li>
                                                    State: <span id="ProfileStateDisplay">@Model.States.Where(s => s.Value == Model.SelectedState.Value.ToString()).FirstOrDefault().Text</span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (Model.SelectedCountry.HasValue)
                                            {
                                                <li>
                                                    Country: <span id="ProfileCountryDisplay">@Model.Countries.Where(c => c.Value == Model.SelectedCountry.Value.ToString()).FirstOrDefault().Text</span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.FormattedPhone))
                                            {
                                                <li>
                                                    Phone number: <span id="ProfilePhoneNumberDisplay">@Model.FormattedPhone</span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.FacebookUrl))
                                            {
                                                <li>
                                                    Facebook: <span id="ProfileFacebookDisplay"><a href="@Model.FacebookUrl" target="_blank">@Model.FacebookUrl</a></span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.TwitterUrl))
                                            {
                                                <li>
                                                    Twitter: <span id="ProfileTwitterDisplay"><a href="@Model.TwitterUrl" target="_blank">@Model.TwitterUrl</a></span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.LinkedInUrl))
                                            {
                                                <li>
                                                    LinkedIn: <span id="ProfileLinkedInDisplay"><a href="@Model.LinkedInUrl" target="_blank">@Model.LinkedInUrl</a></span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.StackOverflowUrl))
                                            {
                                                <li>
                                                    StackOverflow: <span id="ProfileStackOverflowDisplay"><a href="@Model.StackOverflowUrl" target="_blank">@Model.StackOverflowUrl</a></span>
                                                </li>
                                            }
                                        }
                                        @{
                                            if (!string.IsNullOrEmpty(Model.GithubUrl))
                                            {
                                                <li>
                                                    GitHub: <span id="ProfileGithubDisplay"><a href="@Model.GithubUrl" target="_blank">@Model.GithubUrl</a></span>
                                                </li>
                                            }
                                        }

                                        <li>
                                            Skills:
                                            <span id="SkillsDisplay">placeholder for repeater...</span>
                                        </li>
                                    </ul>
                                    <button class="btn btn-primary edit-profile-info-button d-block d-sm-none profile-mobile-view" type="button">
                                        Edit
                                    </button>

                                </div>
                                <div class="personal-info-form hidden" id="PersonalInfoFormContainer">
                                    <form asp-controller="Home" asp-action="UpdateProfileInformation" id="PersonalInfoForm">
                                        <input type="hidden" asp-for="SubscriberGuid" value="@(Model.SubscriberGuid)" />
                                        <div class="form-row">
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedFirstName">First Name</label>
                                                <input type="text" class="form-control" asp-for="FirstName" />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label for="UpdatedLastName">Last Name</label>
                                                <input type="text" class="form-control" asp-for="LastName" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedPhoneNumber">Phone Number</label>
                                                <input type="text" id="phone-number" class="form-control" maxlength="14" placeholder="(###) ###-####" asp-for="FormattedPhone" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedAddress">Address</label>
                                                <input type="text" class="form-control" asp-for="Address" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedCity">City</label>
                                                <input type="text" class="form-control" asp-for="City" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedStateInput">State</label>
                                                @Html.DropDownListFor(m => m.SelectedState, Model.States, "Select State", new { @class = "form-control state-select" })
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedCountryInput">Country</label>
                                                @Html.DropDownListFor(m => m.SelectedCountry, Model.Countries, "Select Country", new { @class = "form-control country-select" })
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedFacebookUrl">Facebook Profile</label>
                                                <input type="text" class="form-control" asp-for="FacebookUrl" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedTwitterUrl">Twitter Profile</label>
                                                <input type="text" class="form-control" asp-for="TwitterUrl" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedLinkedInUrl">LinkedIn Profile</label>
                                                <input type="text" class="form-control" asp-for="LinkedInUrl" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedStackOverflowUrl">StackOverflow Profile</label>
                                                <input type="text" class="form-control" asp-for="StackOverflowUrl" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedGithubUrl">GitHub Profile</label>
                                                <input type="text" class="form-control" asp-for="GithubUrl" />
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="UpdatedSkills">Skills</label>
                                                <input type="text" class="form-control" id="choices-skills" />
                                            </div>
                                            <div class="form-row col-12">
                                                <div id="ValidationSummary">
                                                    <ul></ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-6 col-sm-12 no-padding container-align-right">
                                                <button type="submit" id="EditProfileInfoSubmit" class="btn btn-primary">Submit</button>
                                            </div>
                                            <div class="col-6 d-block d-sm-none no-padding">
                                                <button class="btn btn-primary edit-profile-info-button profile-mobile-cancel" type="button">
                                                    Edit
                                                </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>