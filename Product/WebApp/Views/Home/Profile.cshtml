@using Microsoft.AspNetCore.Mvc.Localization
@using UpDiddy.ViewModels
@using UpDiddyLib.Dto
@using System.Collections.Generic;
@using System;
@model ProfileViewModel
@section Scripts
    {
    <script type="text/javascript">
        // this must be present for the API call used in site.js
        var url = '@Url.Action("GetStatesByCountry", "Home")';
        var subscriberSkills = @Json.Serialize(Model.Skills);

        document.addEventListener("DOMContentLoaded", function (event) {

            $('#PersonalInfoForm').submit(function (e) {
                $.ajax({
                    type: "POST",
                    url: '/home/UpdateProfileInformation',
                    data: $(this).serialize(),
                    success: function (html) {
                        if (html.statusCode === 200) {
                            location.reload();
                        }
                        else if (html.statusCode === 400) {
                            var errorsList = html.description.split("|");
                            for (var i = 0; i < errorsList.length; i++) {
                                if (errorsList[i] !== "") {
                                    toastr.warning(errorsList[i], 'Warning!');
                                }

                            }
                        }
                        else {
                            toastr.error("Something went wrong. You may want to try reloading the page before retrying your last action.", "Error!");
                        }
                    }
                });
                e.preventDefault();
            });
        });

        $(document).ready(function () {
            var toastrOptions = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-full-width",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "3000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            // resume upload component
            $('.resume-upload-form .file-input').on('change', function () {
                var $input = $('.file-input');
                if ($input[0].files.length > 0) {
                    $('.resume-upload-form').addClass('has-file');
                    $('.resume-upload-form .change-file .file-name').text($input[0].files[0].name);
                } else {
                    $('.resume-upload-form').removeClass('has-file');
                    $('.resume-upload-form .change-file .file-name').text('');
                }
            });

            $('.resume-control .edit').click(function (event) {
                event.preventDefault();
                $('.resume-file-component').toggleClass('editing');
            });

            $('.resume-upload-form .cancel').click(function (event) {
                event.preventDefault();
                $('.resume-file-component').toggleClass('editing');
            });

            $('.resume-control .delete').click(function () {
                event.preventDefault();

                $('.resume-control button').prop('disabled', true);
                $('.resume-control button').addClass('disabled');

                var fileGuid = $('.resume-control .delete').data('guid');
                submitting = true;
                CareerCircleAPI.deleteFile(fileGuid)
                    .then(function () {
                        location.reload();
                    })
                    .catch(function (err) {
                        toastr.error('Oops! Something unexpected happened, and we are looking into it.', 'Error!', toastrOptions);
                    })
                    .finally(function () {
                        $('.resume-control button').prop('disabled', false);
                        $('.resume-control button').removeClass('disabled');
                    });
            });

            $('.resume-upload-form').submit(function (event) {
                event.preventDefault();
                var $input = $('.file-input');

                if ($input[0].files.length == 0)
                    return;

                $('.resume-upload-form').addClass('loading');
                $('.resume-upload-form .btn').prop('disabled', true);
                $('.resume-upload-form .btn').addClass('disabled');

                CareerCircleAPI.uploadResume($input[0].files[0])
                    .then(function (x) {
                        location.reload();
                    })
                    .catch(function (err) {
                        toastr.error('Oops! Something unexpected happened, and we are looking into it.', 'Error!', toastrOptions);
                    })
                    .finally(function () {
                        $('.resume-upload-form').removeClass('loading');
                        $('.resume-upload-form .btn').prop('disabled', false);
                        $('.resume-upload-form .btn').removeClass('disabled');
                    });
            });

        });
        
    </script>
    <script src="~/js/modules/selectize-handling.js" asp-append-version="true"></script>
    <script src="~/js/modules/profile.js" asp-append-version="true"></script>
}

@* Modals for editing *@
<form asp-controller="Home" asp-action="UpdateProfileInformation" id="PersonalInfoForm"></form>
<input type="hidden" form="PersonalInfoForm" value="@Model.SubscriberGuid" asp-for="SubscriberGuid" />
<input type="hidden" id="SavedStateGuid" value="@(Model.SelectedState)" />

<!-- Personal Info Modal -->
@{ Html.RenderPartial("_PersonalInfoModalPartial", Model); }


<!-- Education History Modal    -->
@{ Html.RenderPartial("_EducationHistoryModalPartial", Model); }  

   


<!-- Work History Modal -->
@{ Html.RenderPartial("_WorkHistoryModalPartial", Model); }

<!-- Contact Info Modal -->
@{ Html.RenderPartial("_ContactInfoModalPartial", Model); }

<!-- Social Links Modal -->
@{ Html.RenderPartial("_SocialLinksModalPartial", Model); }

<!-- Skills Modal -->
@{ Html.RenderPartial("_SkillsModalPartial", Model); }


<div class="profile-container">
    <div class="row profile-hero">
        <div class="col-md-12">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row profile-header-info">
                            <div class="col-md-8 no-padding">
                                <div class="career-circle-profile-text">My CareerCircle Profile</div>
                                <div id="ProfileName" class="career-circle-profile-name">
                                    <span id="ProfileFirstName">@(string.IsNullOrEmpty(Model.FirstName) ? "CareerCircle User" : Model.FirstName)</span>
                                    <span id="ProfileLastName">@(string.IsNullOrEmpty(Model.LastName) ? "" : Model.LastName)</span>
                                </div>
                                <div class="career-circle-profile-email">
                                    <i class="fa fa-envelope" aria-hidden="true"></i>
                                    @Model.Email
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md">

                        @await Component.InvokeAsync("LinkedInSync", new { SubscriberGuid = Model.SubscriberGuid })
                        <div class="resume-file-component @((Model.Resume != null) ? "has-resume" : "")">
                            @if (Model.Resume != null)
                            {
                                <div class="resume-control">
                                    <a class="download" href="/Home/DownloadFile?fileGuid=@Model.Resume.SubscriberFileGuid" target="_blank"><i class="fas fa-download" title="Download"></i> @Model.Resume.SimpleName</a>
                                    <button class="edit"><i class="fas fa-edit text-light-blue" title="Edit"></i></button>
                                    <button class="delete" data-guid="@Model.Resume.SubscriberFileGuid"><i class="fas fa-minus-circle text-light-blue" title="Delete"></i></button>
                                </div>
                            }
                            <form class="resume-upload-form" method="post" action="/Home/UploadResume" enctype="multipart/form-data">
                                <div>
                                    <label for="resume-file-input" class="btn btn-sm btn-light-blue select-file mb-0">
                                        <i class="fas fa-file-upload float-left pr-2 upload-resume-icon"></i>&nbsp;Upload Resume
                                    </label>
                                    <label for="resume-file-input" class="change-file mb-0">
                                        <span class="file-name"></span>&nbsp;<i class="fas fa-exchange-alt"></i>
                                    </label>
                                    <button type="submit" class="submit btn btn-sm btn-light-blue">
                                        Save
                                        <span class="loading-spinner spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                        <span class="loading-spinner sr-only">Loading...</span>
                                    </button>
                                    <button class="btn btn-sm btn-secondary cancel">Cancel</button>
                                    <input required id="resume-file-input" class="pseudo-hidden file-input" type="file" accept=".doc,.docx,.odt,.pdf,.rtf,.tex,.txt,.wks,.wps,.wpd" />
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="profile-body-container">
        <div class="row">
            <div class="col-md-12">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="courses-in-progress-container">
                            <div class="course-in-progress-header">
                                <h2>Courses in Progress</h2>
                            </div>
                            <div class="courses-in-progress-list-container">
                                @{
                                    if (Model.Enrollments.Count == 0)
                                    {
                                        <text>You are not currently enrolled in any courses.</text>
                                    }
                                }
                                <ul class="courses-in-progress-list-desktop">
                                    @foreach (EnrollmentDto enrollment in Model.Enrollments)
                                    {
                                    <li class="course-in-progress-li">
                                        @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                        {
                                            @Html.Raw("<a target=\"_blank\" href=\"" + enrollment.CourseUrl + "\">")
                                        }

                                        <div class="course-in-progress-anchor-container">
                                            <div class="course-in-progress-info">
                                                <div class="row no-padding">
                                                    <div class="col-12 col-sm-8 no-padding">
                                                        <h3>@enrollment.Course.Name</h3>

                                                    </div>
                                                    <div class="col-12 col-sm-4 no-padding cip-progress-indictation">
                                                        @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Pending)
                                                        {
                                                            <text>Enrollment in progress.</text>
                                                        }
                                                        else if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                                        {
                                                            <text>Continue <i class="fas fa-arrow-right"></i></text>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            @{
                                                @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                                {
                                                    double percentComplete = enrollment.PercentComplete;
                                                    string classFormatter = "";
                                                    if (percentComplete < 50)
                                                    {
                                                        classFormatter = "less-than-50";
                                                    }
                                                    else
                                                    {
                                                        classFormatter = "more-than-50";
                                                    }
                                                    <div class="course-in-progress">

                                                        <div class="progress @(classFormatter)">

                                                            <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="@(percentComplete)" aria-valuemin="0" aria-valuemax="100">
                                                                <div class="course-completion-percentage">
                                                                    @(percentComplete)%
                                                                </div>
                                                            </div>

                                                        </div>

                                                    </div>
                                                }
                                                else if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Error)
                                                {
                                                    <div class="course-enrollment-failure-container">
                                                        Unfortunately, an error occurred when attempting to process your enrollment. We have been notified and are working to resolve the issue.
                                                    </div>
                                                }

                                            }
                                            <span class="marketing-campaign-msg"> @enrollment.CampaignCourseStatusInfo </span>
                                        </div>

                                        @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                        {
                                            @Html.Raw("</a>")
                                        }


                        

                                    </li>
                                    }
                                </ul>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
        </div>

    </div>

    <div class="profile-edit-container row">
        <div class="col-12">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div id="ProfileInformationContainer">
                            <div class="edit-personal-info-container">
                                <div class="personal-info-header">
                                    <div class="row">
                                        <div class="col-12 no-padding">
                                            <h2>Profile</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="options-input-container">
                                    <div class="row">

                                        <!-- Personal Info -->
                                        @{ Html.RenderPartial("_PersonalInfoPartial", Model); }

                                        <!-- Contact Info -->
                                        @{ Html.RenderPartial("_ContactInfoPartial", Model); }

                                        <!-- Work History -->
                                        @{ Html.RenderPartial("_WorkHistoryPartial", Model); }

                                        <!-- Education History  -->
                                        @{ Html.RenderPartial("_EducationHistoryPartial", Model); } 
                                           

                                        <!-- Social Links -->
                                        @{ Html.RenderPartial("_SocialLinksPartial", Model); }

                                        <!-- Skills  -->
                                        @{ Html.RenderPartial("_SkillsPartial", Model); }


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>