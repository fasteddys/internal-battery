@using Microsoft.AspNetCore.Mvc.Localization
@using UpDiddy.ViewModels
@using UpDiddyLib.Dto
@using System.Collections.Generic;
@using System;
@model ProfileViewModel
@section Scripts
    {
    <script type="text/javascript">
        // this must be present for the API call used in site.js
        var url = '@Url.Action("GetStatesByCountry", "Home")';
        var subscriberSkills = @Json.Serialize(Model.Skills);
        $(document).ready(function () {
            var toastrOptions = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-full-width",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "3000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            document.addEventListener("DOMContentLoaded", function (event) {

            $('#PersonalInfoForm').submit(function (e) {
                $.ajax({
                    type: "POST",
                    url: '/home/UpdateProfileInformation',
                    data: $(this).serialize(),
                    success: function (html) {
                        if (html.statusCode === "200") {
                            location.reload();
                        }
                        else if (html.statusCode === "400") {
                            var errorsList = html.description.split("|");
                            for (var i = 0; i < errorsList.length; i++) {
                                if (errorsList[i] !== "") {
                                    toastr.warning(errorsList[i], 'Warning!');
                                }

                            }

                        }
                    }
                });
                e.preventDefault();
            });




        });

            // resume upload component
            $('.resume-upload-form .file-input').on('change', function () {
                var $input = $('.file-input');
                if ($input[0].files.length > 0) {
                    $('.resume-upload-form').addClass('has-file');
                    $('.resume-upload-form .change-file .file-name').text($input[0].files[0].name);
                } else {
                    $('.resume-upload-form').removeClass('has-file');
                    $('.resume-upload-form .change-file .file-name').text('');
                }
            });

            $('.resume-control .edit').click(function (event) {
                event.preventDefault();
                $('.resume-file-component').toggleClass('editing');
            });

            $('.resume-upload-form .cancel').click(function (event) {
                event.preventDefault();
                $('.resume-file-component').toggleClass('editing');
            });

            $('.resume-control .delete').click(function () {
                event.preventDefault();

                $('.resume-control button').prop('disabled', true);
                $('.resume-control button').addClass('disabled');

                var fileId = $('.resume-control .delete').data('id');
                submitting = true;
                CareerCircleAPI.deleteFile(fileId)
                    .then(function () {
                        location.reload();
                    })
                    .catch(function (err) {
                        toastr.error('Oops! Something unexpected happened, and we are looking into it.', 'Error!', toastrOptions);
                    })
                    .finally(function () {
                        $('.resume-control button').prop('disabled', false);
                        $('.resume-control button').removeClass('disabled');
                    });
            });

            $('.resume-upload-form').submit(function (event) {
                event.preventDefault();
                var $input = $('.file-input');

                if ($input[0].files.length == 0)
                    return;

                $('.resume-upload-form').addClass('loading');
                $('.resume-upload-form .btn').prop('disabled', true);
                $('.resume-upload-form .btn').addClass('disabled');

                CareerCircleAPI.uploadResume($input[0].files[0])
                    .then(function (x) {
                        location.reload();
                    })
                    .catch(function (err) {
                        toastr.error('Oops! Something unexpected happened, and we are looking into it.', 'Error!', toastrOptions);
                    })
                    .finally(function () {
                        $('.resume-upload-form').removeClass('loading');
                        $('.resume-upload-form .btn').prop('disabled', false);
                        $('.resume-upload-form .btn').removeClass('disabled');
                    });
            });

        });
        
    </script>
    <script src="~/js/selectize-handling.js"></script>
    <script src="~/js/profile.js"></script>
}

@* Modals for editing *@
<form asp-controller="Home" asp-action="UpdateProfileInformation" id="PersonalInfoForm"></form>
<input type="hidden" form="PersonalInfoForm" value="@Model.SubscriberGuid" asp-for="SubscriberGuid" />
<input type="hidden" id="SavedStateGuid" value="@(Model.SelectedState)" />
<div class="modal fade" id="NameModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="profile-edit-modal-header-container">
                    <h4>Change Personal Info</h4>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">First name</div>
                    <div class="modal-edit-input">
                        <input id="FirstNameUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="FirstName" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">Last name</div>
                    <div class="modal-edit-input">
                        <input id="LastNameUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="LastName" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">Address</div>
                    <div class="modal-edit-input">
                        <input id="AddressUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="Address" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">City</div>
                    <div class="modal-edit-input">
                        <input id="CityUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="City" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">Country</div>
                    <div class="modal-edit-input">
                        @Html.DropDownListFor(m => m.SelectedCountry, Model.Countries, "Select Country", new { @class = "form-control country-select", form = "PersonalInfoForm" })
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">State</div>
                    <div class="modal-edit-input">
                        @Html.DropDownListFor(m => m.SelectedState, Model.States, "Select State", new { @class = "form-control state-select", form = "PersonalInfoForm" })
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="NameModalSaveButton" form="PersonalInfoForm" type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ContactInfoModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="profile-edit-modal-header-container">
                    <h4>Change contact info</h4>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">Phone Number</div>
                    <div class="modal-edit-input">
                        <input id="PhoneUpdateInput" form="PersonalInfoForm" type="text" class="form-control phone-number-input" maxlength="14" placeholder="(###) ###-####" asp-for="FormattedPhone" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="ContactInfoModalSaveButton" form="PersonalInfoForm" type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="SocialLinksModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="profile-edit-modal-header-container">
                    <h4>Change social links</h4>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">Facebook</div>
                    <div class="modal-edit-input">
                        @{
                            string facebookPlaceholder = string.IsNullOrEmpty(Model.FacebookUrl) ? "E.g. http://www.facebook.com/me" : Model.FacebookUrl;
                        }
                        <input id="FacebookUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="FacebookUrl" placeholder="@facebookPlaceholder" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">Twitter</div>
                    <div class="modal-edit-input">
                        @{
                            string twitterPlaceholder = string.IsNullOrEmpty(Model.TwitterUrl) ? "E.g. https://www.twitter.com/me" : Model.TwitterUrl;
                        }
                        <input id="TwitterUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="TwitterUrl" placeholder="@twitterPlaceholder" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">LinkedIn</div>
                    <div class="modal-edit-input">
                        @{
                            string linkedinPlaceholder = string.IsNullOrEmpty(Model.LinkedInUrl) ? "E.g. https://linkedin.com/in/me" : Model.LinkedInUrl;
                        }
                        <input id="LinkedInUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="LinkedInUrl" placeholder="@linkedinPlaceholder" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">StackOverflow</div>
                    <div class="modal-edit-input">
                        @{
                            string stackOverflowPlaceholder = string.IsNullOrEmpty(Model.StackOverflowUrl) ? "E.g. https://stackoverflow.com/users/123456/me" : Model.StackOverflowUrl;
                        }
                        <input id="StackOverflowUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="StackOverflowUrl" placeholder="@stackOverflowPlaceholder" />
                    </div>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">GitHub</div>
                    <div class="modal-edit-input">
                        @{
                            string githubPlaceholder = string.IsNullOrEmpty(Model.GithubUrl) ? "E.g. http://github.com/me" : Model.GithubUrl;
                        }
                        <input id="GitHubUpdateInput" form="PersonalInfoForm" type="text" class="form-control" asp-for="GithubUrl" placeholder="@githubPlaceholder" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="SocialLinksModalSaveButton" disabled form="PersonalInfoForm" type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="SkillsModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="profile-edit-modal-header-container">
                    <h4>Change skills</h4>
                </div>
                <div class="profile-edit-modal-edit-option">
                    <div class="modal-edit-input-label">Skills</div>
                    <div class="modal-edit-input">
                        <input form="PersonalInfoForm" type="text" asp-for="SelectedSkills" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button form="PersonalInfoForm" type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="profile-container">
    <div class="row profile-hero">
        <div class="col-md-12">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row profile-header-info">
                            <div class="col-md-8 no-padding">
                                <div class="career-circle-profile-text">My CareerCircle Profile</div>
                                <div id="ProfileName" class="career-circle-profile-name">
                                    <span id="ProfileFirstName">@(string.IsNullOrEmpty(Model.FirstName) ? "CareerCircle User" : Model.FirstName)</span>
                                    <span id="ProfileLastName">@(string.IsNullOrEmpty(Model.LastName) ? "" : Model.LastName)</span>
                                </div>
                                <div class="career-circle-profile-email">
                                    <i class="fa fa-envelope" aria-hidden="true"></i>
                                    @Model.Email
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md">
                        <div class="resume-file-component @((Model.Resume != null) ? "has-resume" : "")">
                            @if (Model.Resume != null)
                            {
                                <div class="resume-control">
                                    <a class="download" href="/Home/DownloadFile?fileId=@Model.Resume.Id" target="_blank"><i class="fas fa-download" title="Download"></i> @Model.Resume.SimpleName</a>
                                    <button class="edit"><i class="fas fa-edit text-light-blue" title="Edit"></i></button>
                                    <button class="delete" data-id="@Model.Resume.Id"><i class="fas fa-minus-circle text-light-blue" title="Delete"></i></button>
                                </div>
                            }
                            <form class="resume-upload-form" method="post" action="/Home/UploadResume" enctype="multipart/form-data">
                                <div>
                                    <label for="resume-file-input" class="btn btn-sm btn-light-blue select-file mb-0">
                                        <i class="fas fa-file-upload"></i>&nbsp;Upload Resume
                                    </label>
                                    <label for="resume-file-input" class="change-file mb-0">
                                        <span class="file-name"></span>&nbsp;<i class="fas fa-exchange-alt"></i>
                                    </label>
                                    <button type="submit" class="submit btn btn-sm btn-light-blue">
                                        Save
                                        <span class="loading-spinner spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                        <span class="loading-spinner sr-only">Loading...</span>
                                    </button>
                                    <button class="btn btn-sm btn-secondary cancel">Cancel</button>
                                    <input required id="resume-file-input" class="pseudo-hidden file-input" type="file" accept=".doc,.docx,.odt,.pdf,.rtf,.tex,.txt,.wks,.wps,.wpd" />
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="profile-body-container">
        <div class="row">
            <div class="col-md-12">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="courses-in-progress-container">
                            <div class="course-in-progress-header">
                                <h2>Courses in Progress</h2>
                            </div>
                            <div class="courses-in-progress-list-container">
                                @{
                                    if (Model.Enrollments.Count == 0)
                                    {
                                        <text>You are not currently enrolled in any courses.</text>
                                    }
                                }
                                <ul class="courses-in-progress-list-desktop">
                                    @foreach (EnrollmentDto enrollment in Model.Enrollments)
                                    {
                                        <li class="course-in-progress-li">
                                            @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                            {
                                                @Html.Raw("<a target=\"_blank\" href=\"" + enrollment.CourseUrl + "\">")
                                            }

                                            <div class="course-in-progress-anchor-container">
                                                <div class="course-in-progress-info">
                                                    <div class="row no-padding">
                                                        <div class="col-12 col-sm-8 no-padding">
                                                            <h3>@enrollment.Course.Name</h3>
                                                        </div>
                                                        <div class="col-12 col-sm-4 no-padding cip-progress-indictation">
                                                            @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Pending)
                                                            {
                                                                <text>Enrollment in progress.</text>
                                                            }
                                                            else if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                                            {
                                                                <text>Continue <i class="fas fa-arrow-right"></i></text>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                @{
                                                    @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                                    {
                                                        double percentComplete = enrollment.PercentComplete;
                                                        string classFormatter = "";
                                                        if (percentComplete < 50)
                                                        {
                                                            classFormatter = "less-than-50";
                                                        }
                                                        else
                                                        {
                                                            classFormatter = "more-than-50";
                                                        }
                                                        <div class="course-in-progress">

                                                            <div class="progress @(classFormatter)">

                                                                <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="@(percentComplete)" aria-valuemin="0" aria-valuemax="100">
                                                                    <div class="course-completion-percentage">
                                                                        @(percentComplete)%
                                                                    </div>
                                                                </div>

                                                            </div>

                                                        </div>
                                                    }
                                                    else if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Error)
                                                    {
                                                        <div class="course-enrollment-failure-container">
                                                            Unfortunately, an error occurred when attempting to process your enrollment. We have been notified and are working to resolve the issue.
                                                        </div>
                                                    }

                                                }
                                            </div>

                                            @if (enrollment.SimplifiedEnrollmentStatus == SimplifiedEnrollmentStatus.Success)
                                            {
                                                @Html.Raw("</a>")
                                            }




                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
        </div>

    </div>

    <div class="profile-edit-container row">
        <div class="col-12">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div id="ProfileInformationContainer">
                            <div class="edit-personal-info-container">
                                <div class="personal-info-header">
                                    <div class="row">
                                        <div class="col-12 no-padding">
                                            <h2>Profile</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="options-input-container">
                                    <div class="row">
                                        <div class="col-12 no-padding">
                                            <div class="edit-container">
                                                <div class="row">
                                                    <div class="col-6 no-padding">
                                                        <h5>Personal Info</h5>
                                                    </div>
                                                    <div class="col-6 no-padding container-align-right">
                                                        <span class="edit-action" data-toggle="modal" data-target="#NameModal">Edit</span>
                                                    </div>
                                                </div>
                                                @{
                                                    if (!Model.HasFirstAndLastName && !Model.HasFullyQualifiedAddress)
                                                    {
                                                        <text>No personal information has been provided.</text>
                                                    }
                                                    else
                                                    {
                                                        <div class="options-container">
                                                            @{
                                                                if (Model.HasFirstAndLastName)
                                                                {
                                                                    <div class="name-container">
                                                                        <div class="row">
                                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                                Name
                                                                            </div>
                                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                                @Model.FirstName @Model.LastName
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                if (Model.HasFullyQualifiedAddress)
                                                                {
                                                                    <div class="address-container">
                                                                        <div class="row">
                                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                                Address
                                                                            </div>
                                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                                @Model.Address @Model.City, @Model.States.Where(s => s.Value == Model.SelectedState.Value.ToString()).FirstOrDefault().Text, @Model.Countries.Where(c => c.Value == Model.SelectedCountry.Value.ToString()).FirstOrDefault().Text
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            }
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                        <div class="col-12 no-padding">
                                            <div class="edit-container">
                                                <div class="row">
                                                    <div class="col-6 no-padding">
                                                        <h5>Contact Info</h5>
                                                    </div>
                                                    <div class="col-6 no-padding container-align-right">
                                                        <span class="edit-action" data-toggle="modal" data-target="#ContactInfoModal">Edit</span>
                                                    </div>
                                                </div>
                                                <div class="options-container">
                                                    @{
                                                        if (!string.IsNullOrWhiteSpace(Model.FormattedPhone))
                                                        {
                                                            <div>
                                                                <div class="row">
                                                                    <div class="col-12 col-sm-3 option-header no-padding">
                                                                        Phone
                                                                    </div>
                                                                    <div class="col-12 col-sm-9 option-value no-padding">
                                                                        @Model.FormattedPhone
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                    @*We know this page cannot be accessed unless user has signed up with an email.
                                                        Therefore, we don't need to check if it exists.*@
                                                    <div>
                                                        <div class="row">
                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                Email
                                                            </div>
                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                @Model.Email
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 no-padding">
                                            <div class="edit-container">
                                                <div class="row">
                                                    <div class="col-6 no-padding">
                                                        <h5>Social Links</h5>
                                                    </div>
                                                    <div class="col-6 no-padding container-align-right">
                                                        <span class="edit-action" data-toggle="modal" data-target="#SocialLinksModal">Edit</span>
                                                    </div>
                                                </div>
                                                @{
                                                    if (!Model.HasSuppliedAnySocialLinks)
                                                    {
                                                        <text>No social links have been provided.</text>
                                                    }
                                                    else
                                                    {
                                                        <div class="options-container">
                                                            @{
                                                                if (!string.IsNullOrWhiteSpace(Model.FacebookUrl))
                                                                {
                                                                    <div>
                                                                        <div class="row">
                                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                                Facebook
                                                                            </div>
                                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                                @Model.FacebookUrl
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                if (!string.IsNullOrWhiteSpace(Model.GithubUrl))
                                                                {
                                                                    <div>
                                                                        <div class="row">
                                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                                GitHub
                                                                            </div>
                                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                                @Model.GithubUrl
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                if (!string.IsNullOrWhiteSpace(Model.LinkedInUrl))
                                                                {
                                                                    <div>
                                                                        <div class="row">
                                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                                LinkedIn
                                                                            </div>
                                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                                @Model.LinkedInUrl
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                if (!string.IsNullOrWhiteSpace(Model.StackOverflowUrl))
                                                                {
                                                                    <div>
                                                                        <div class="row">
                                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                                StackOverflow
                                                                            </div>
                                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                                @Model.StackOverflowUrl
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                if (!string.IsNullOrWhiteSpace(Model.TwitterUrl))
                                                                {
                                                                    <div>
                                                                        <div class="row">
                                                                            <div class="col-12 col-sm-3 option-header no-padding">
                                                                                Twitter
                                                                            </div>
                                                                            <div class="col-12 col-sm-9 option-value no-padding">
                                                                                @Model.TwitterUrl
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            }
                                                        </div>
                                                    }
                                                }

                                            </div>
                                        </div>
                                        <div class="col-12 no-padding">
                                            <div class="edit-container">
                                                <div class="row">
                                                    <div class="col-6 no-padding">
                                                        <h5>Skills</h5>
                                                    </div>
                                                    <div class="col-6 no-padding container-align-right">
                                                        <span class="edit-action" data-toggle="modal" data-target="#SkillsModal">Edit</span>
                                                    </div>
                                                </div>
                                                @{
                                                    if (Model.Skills.Count == 0)
                                                    {
                                                        <text>No skills have been provided.</text>
                                                    }
                                                    else
                                                    {
                                                        <div class="options-container">
                                                            @{
                                                                foreach (var skill in Model.Skills)
                                                                {
                                                                    <div class="skill-pill">
                                                                        @{ 
                                                                            string skillText = UpDiddyLib.Helpers.Utils.ToTitleCase(skill.SkillName);
                                                                            <text>@skillText</text>
                                                                        }
                                                                    </div>
                                                                }
                                                            }
                                                        </div>
                                                    }
                                                }

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>